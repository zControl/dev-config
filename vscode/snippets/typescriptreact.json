{
	// Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

"React Arrow Function": {
  "prefix": "raf",
  "body": [
    "interface ${1:ComponentProps} {",
    "  prop1: string;",
    "  prop2: string;",
    "}",
    "",
    "const ${2:ComponentName} = ({ prop1, prop2 }: ${1:ComponentProps}) => {",
    "",
    "  return (",
    "    <div>",
    "      <div>{prop1}</div>",
    "      <div>{prop2}</div>",
    "    </div>",
    "  );",
    "};",
    "",
    "export { ${2:ComponentName} };"
  ],
  "description": "Create an arrow function component with props"
},

"React Arrow Function with Translation": {
  "prefix": "rafTranslation",
  "body": [
    "import { useTranslation } from 'react-i18next';",
    "",
    "interface ${1:ComponentProps} {",
    "  prop1: string;",
    "  prop2: string;",
    "}",
    "",
    "const ${2:ComponentName} = ({ prop1, prop2 }: ${1:ComponentProps}) => {",
    "  const { t } = useTranslation();",
    "",
    "  return (",
    "    <div>",
    "      <div>{prop1}</div>",
    "      <div>{prop2}</div>",
    "    </div>",
    "  );",
    "};",
    "",
    "export { ${2:ComponentName} };"
  ],
  "description": "Create an arrow function component with props and useTranslation hook"
}


}
